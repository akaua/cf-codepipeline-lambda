---
AWSTemplateFormatVersion: 2010-09-09
Description: >
  This template shows how to use AWS CodePipeline and AWS CodeBuild to build an
  automated continuous deployment pipeline to Amazon Lambda.
Parameters:
  RepositoryName:
    Type: String
    Default: lambda
    Description: Repository name 
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z]*'
  LambdabucketName:
    Type: String
    Default: test-lambda-aka
    Description: bucket name to store lambda 
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z]*'
Resources:
  ### Roles ###
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Resource: "*"
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion

  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-CodePipeline-Service-3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'cloudformation:*'
                Resource: '*'

  CloudFormationRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CloudFormationRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        -
          PolicyName: "CloudFormationNestedCFNAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "iam:AddRoleToInstanceProfile"
                  - "iam:AttachRolePolicy"
                  - "iam:CreateInstanceProfile"
                  - "iam:CreatePolicy"
                  - "iam:CreateRole"
                  - "iam:DeleteInstanceProfile"
                  - "iam:DeletePolicy"
                  - "iam:DeleteRole"
                  - "iam:DeleteRolePolicy"
                  - "iam:DetachRolePolicy"
                  - "iam:GetInstanceProfile"
                  - "iam:GetPolicy"
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                  - "iam:ListAttachedRolePolicies"
                  - "iam:ListInstanceProfiles"
                  - "iam:ListInstanceProfilesForRole"
                  - "iam:ListRolePolicies"
                  - "iam:ListRoles"
                  - "iam:PassRole"
                  - "iam:PutRolePolicy"
                  - "iam:RemoveRoleFromInstanceProfile"
                Resource:
                  - "*"
              -
                Effect: "Allow"
                Action:
                  - "lambda:*"
                Resource:
                  - "*"
              - 
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - 
                Effect: Allow
                Action:
                  - cloudformation:*
                  - apigateway:*
                Resource: "*"
              - 
                Effect: Allow
                Action:
                  - events:*
                Resource: "*"
              -
                Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:ListBucket"
                Resource:
                  - "*"

  ### Repository ###
  MyRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref RepositoryName
      RepositoryDescription: a description
  
  ### Artifact Bucket ###
  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties: 
      BucketName: !Ref LambdabucketName

  ### Build Project ###
  CodeBuildLambdaProject:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildServiceRole
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: BUCKET
            Value: kb8-udacity-store
      Name: !Sub ${AWS::StackName}-CodeBuildLambdaProject
      ServiceRole: !Ref CodeBuildServiceRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
  
  ### Pipeline ###
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                BranchName: master
                RepositoryName: !GetAtt MyRepo.Name
                PollForSourceChanges: true
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildLambdaProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                ChangeSetName: pipeline-changeset
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Ref RepositoryName
                TemplatePath: 'BuildOutput::outputtemplate.yml'
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

